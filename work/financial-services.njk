---
tags: work
title: Financial services
layout: layouts/work.njk
svg: "partials/svg/hero-illu-financial-services.svg"
thumbnail: /img/thumbnail-financial-services.svg
card: 
  technologies: Real-time, FIX protocol, Java
  icon_1: chart
  list_1: "Develop an automated trading platform"
  icon_2: link
  list_2: "Connect to existing Matlab code"
  icon_3: java
  list_3: "Implement trading algorithms in Java"
---
{% import "macros.html" as macros %}

{{ macros.summary( summarytext = [
  'Automated stock market trading is very popular with large trading houses. Their unlimited budgets often give them the advantage. But what about automated trading systems for smaller traders? Systems which do not make a profit by performing millions of transactions a day, but by assisting knowledgeable traders to optimise their returns.'
] ) }}

{{ macros.challenges(
  challengestext = [
    'These days, a lot of trading on stock exchanges is done by algorithms. The trades need to be executed quickly and reliably to make a profit. Usually, this involves hordes of software developers and plenty of hardware. Doing it on a budget is quite a challenge. This is particularly difficult as the algorithms are developed based on the knowledge and intuition of traders and are closely guarded trade secrets.'
  ],
  challengesbullets = [
    'Automated trading usually requires large development budgets.',
    'IP protection of trading algorithms.'
  ]
) }}      

{{ macros.solutions(
  solutionstext = [
    'One of the trading systems developed by Etosis split a trade order into several smaller orders executed at different times, to optimise the price and make it less obvious that someone is interested in buying a large number of shares. This system was useful for smaller traders, as orders are public record and large traders can benefit from this information by snapping up those shares.',

    'Another, more elaborate system created by Etosis, looked at long-term changes in the price of related assets and automatically established a position in a certain asset if it turned out to be undervalued. The algorithm to determine if an asset is undervalued was developed by the client in MATLAB. To allow the algorithm to execute without the need to divulge the underlying code, the system was configured to connect to existing MATLAB code.',

    'Although very different, both systems needed to be extremely reliable, well tested and fail-safe. Both needed to analyse the entire market to prevent automated hysteria, for example, during a period of extreme volatility. They also needed to connect to different existing trading platforms and pricing information systems, all with their own APIs.'
  ],
  solutionsbullets = [
    'A simple and effective trading platform.',
    'Connecting to Matlab implementations of trading algorithms.'
  ]
) }}      